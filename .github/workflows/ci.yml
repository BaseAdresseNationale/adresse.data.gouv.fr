name: CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  NEXT_PUBLIC_API_BAN_URL: ${{ vars.NEXT_PUBLIC_API_BAN_URL }}
  NEXT_PUBLIC_BAL_ADMIN_API_URL: ${{ vars.NEXT_PUBLIC_BAL_ADMIN_API_URL }}
  NEXT_PUBLIC_API_GEO_URL: ${{ vars.NEXT_PUBLIC_API_GEO_URL }}
  NEXT_PUBLIC_API_INSEE_URL: ${{ vars.NEXT_PUBLIC_API_INSEE_URL }}
  NEXT_PUBLIC_ADRESSE_URL: ${{ vars.NEXT_PUBLIC_ADRESSE_URL }}
  NEXT_PUBLIC_DATAGOUV_URL: ${{ vars.NEXT_PUBLIC_DATAGOUV_URL }}
  NEXT_PUBLIC_API_DEPOT_URL: ${{ vars.NEXT_PUBLIC_API_DEPOT_URL }}
  NEXT_PUBLIC_API_ETABLISSEMENTS_PUBLIC: ${{ vars.NEXT_PUBLIC_API_ETABLISSEMENTS_PUBLIC }}
  NEXT_PUBLIC_BAL_API_URL: ${{ vars.NEXT_PUBLIC_BAL_API_URL }}
  NEXT_PUBLIC_GHOST_URL: ${{ vars.NEXT_PUBLIC_GHOST_URL }}
  NEXT_PUBLIC_GHOST_URL_IMAGES_SOURCES: ${{ vars.NEXT_PUBLIC_GHOST_URL_IMAGES_SOURCES }}
  NEXT_PUBLIC_GHOST_KEY: ${{ vars.NEXT_PUBLIC_GHOST_KEY }}
  NEXT_PUBLIC_BREVO_API_URL: ${{ vars.NEXT_PUBLIC_BREVO_API_URL }}
  NEXT_PUBLIC_API_SIGNALEMENT: ${{ vars.NEXT_PUBLIC_API_SIGNALEMENT }}
  NEXT_PUBLIC_MES_SIGNALEMENTS: ${{ vars.NEXT_PUBLIC_MES_SIGNALEMENTS }}
  NEXT_PUBLIC_MES_SIGNALEMENTS_SOURCE_ID: ${{ vars.NEXT_PUBLIC_MES_SIGNALEMENTS_SOURCE_ID }}
  BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
  NEXT_PUBLIC_MOISSONNEUR_BAL_API_URL: ${{ vars.NEXT_PUBLIC_MOISSONNEUR_BAL_API_URL }}

  # S3 Configuration
  S3_CONFIG_ACCESS_KEY_ID: ${{ secrets.S3_CONFIG_ACCESS_KEY_ID }}
  S3_CONFIG_SECRET_ACCESS_KEY: ${{ secrets.S3_CONFIG_SECRET_ACCESS_KEY }}
  S3_CONFIG_REGION: ${{ secrets.S3_CONFIG_REGION }}
  S3_CONFIG_ENDPOINT: ${{ secrets.S3_CONFIG_ENDPOINT }}
  S3_CONFIG_BUCKETNAME: ${{ secrets.S3_CONFIG_BUCKETNAME }}

  # MATOMO
  NEXT_PUBLIC_MATOMO_URL: ${{ vars.NEXT_PUBLIC_MATOMO_URL }}
  NEXT_PUBLIC_MATOMO_SITE_ID: ${{ vars.NEXT_PUBLIC_MATOMO_SITE_ID }}

  # ProConnect
  HOST: ${{vars.HOST}}
  CALLBACK_URL: ${{vars.CALLBACK_URL}}
  PC_CLIENT_ID: ${{vars.PC_CLIENT_ID}}
  PC_CLIENT_SECRET: ${{vars.PC_CLIENT_SECRET}}
  PC_PROVIDER: ${{vars.PC_PROVIDER}}
  PC_SCOPES: ${{vars.PC_SCOPES}}
  LOGIN_HINT: ${{vars.LOGIN_HINT}}
  PC_ID_TOKEN_SIGNED_RESPONSE_ALG: ${{vars.PC_ID_TOKEN_SIGNED_RESPONSE_ALG}}
  PC_USERINFO_SIGNED_RESPONSE_ALG: ${{vars.PC_USERINFO_SIGNED_RESPONSE_ALG}}
  ACR_VALUES: ${{vars.ACR_VALUES}}
  SESSION_SECRET: ${{vars.SESSION_SECRET}}
  ACR_VALUE_FOR_2FA: ${{vars.ACR_VALUE_FOR_2FA}}
  ACR_VALUE_FOR_CERTIFICATION_DIRIGEANT: ${{vars.ACR_VALUE_FOR_CERTIFICATION_DIRIGEANT}}
  SHOW_BETA_FEATURES: ${{vars.SHOW_BETA_FEATURES}}
  
  # certification limited
  NEXT_PUBLIC_CERTIFICATION_LIMITED: ${{vars.NEXT_PUBLIC_CERTIFICATION_LIMITED}}
  NEXT_PUBLIC_CERTIFICATION_LIMITED_LIST: ${{vars.NEXT_PUBLIC_CERTIFICATION_LIMITED_LIST}}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.6]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Lint the codebase
        run: npm run lint
      - name: Build
        run: npm run build
