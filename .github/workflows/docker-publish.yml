name: Docker

on:
  push:
    branches: 
      - "master"
      - "main"  # Ajout de la branche main
      - "develop"
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: 
      - "master"
      - "main"  # Ajout de la branche main
      - "develop"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NEXT_PUBLIC_API_BAN_URL=${{ vars.NEXT_PUBLIC_API_BAN_URL }}
            NEXT_PUBLIC_BAL_ADMIN_API_URL=${{ vars.NEXT_PUBLIC_BAL_ADMIN_API_URL }}
            NEXT_PUBLIC_API_GEO_URL=${{ vars.NEXT_PUBLIC_API_GEO_URL }}
            NEXT_PUBLIC_API_INSEE_URL=${{ vars.NEXT_PUBLIC_API_INSEE_URL }}
            NEXT_PUBLIC_ADRESSE_URL=${{ vars.NEXT_PUBLIC_ADRESSE_URL }}
            NEXT_PUBLIC_DATAGOUV_URL=${{ vars.NEXT_PUBLIC_DATAGOUV_URL }}
            NEXT_PUBLIC_API_DEPOT_URL=${{ vars.NEXT_PUBLIC_API_DEPOT_URL }}
            NEXT_PUBLIC_API_ETABLISSEMENTS_PUBLIC=${{ vars.NEXT_PUBLIC_API_ETABLISSEMENTS_PUBLIC }}
            NEXT_PUBLIC_BAL_API_URL=${{ vars.NEXT_PUBLIC_BAL_API_URL }}
            NEXT_PUBLIC_GHOST_URL=${{ vars.NEXT_PUBLIC_GHOST_URL }}
            NEXT_PUBLIC_GHOST_URL_IMAGES_SOURCES=${{ vars.NEXT_PUBLIC_GHOST_URL_IMAGES_SOURCES }}
            NEXT_PUBLIC_GHOST_KEY=${{ vars.NEXT_PUBLIC_GHOST_KEY }}
            NEXT_PUBLIC_MOISSONNEUR_BAL_API_URL=${{ vars.NEXT_PUBLIC_MOISSONNEUR_BAL_API_URL }}
            NEXT_PUBLIC_MATOMO_URL=${{ vars.NEXT_PUBLIC_MATOMO_URL }}
            NEXT_PUBLIC_MATOMO_SITE_ID=${{ vars.NEXT_PUBLIC_MATOMO_SITE_ID }}
            NEXT_PUBLIC_API_SIGNALEMENT=${{ vars.NEXT_PUBLIC_API_SIGNALEMENT }}
            NEXT_PUBLIC_MES_SIGNALEMENTS=${{ vars.NEXT_PUBLIC_MES_SIGNALEMENTS }}
            NEXT_PUBLIC_MES_SIGNALEMENTS_SOURCE_ID=${{ vars.NEXT_PUBLIC_MES_SIGNALEMENTS_SOURCE_ID }}
      # Debug: Afficher les informations de d√©bogage
      - name: Print Debug Info
        run: |
          echo "Registry: ${{ env.REGISTRY }}"
          echo "Image Name: ${{ env.IMAGE_NAME }}"
